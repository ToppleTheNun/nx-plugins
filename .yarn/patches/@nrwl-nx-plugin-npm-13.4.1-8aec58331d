diff --git a/src/utils/testing-utils/nx-project.js b/src/utils/testing-utils/nx-project.js
index 7284da90de99a43453af342e2686273b66132738..2b09064d43656db6a577b5e83d366c5efe6e3198 100644
--- a/src/utils/testing-utils/nx-project.js
+++ b/src/utils/testing-utils/nx-project.js
@@ -10,7 +10,7 @@ const paths_1 = require("./paths");
 const utils_1 = require("./utils");
 function runNxNewCommand(args, silent) {
     const localTmpDir = (0, path_1.dirname)((0, paths_1.tmpProjPath)());
-    return (0, child_process_1.execSync)(`node ${require.resolve('@nrwl/tao')} new proj --nx-workspace-root=${localTmpDir} --no-interactive --skip-install --collection=@nrwl/workspace --npmScope=proj --preset=empty ${args || ''}`, Object.assign({ cwd: localTmpDir }, (silent && false ? { stdio: ['ignore', 'ignore', 'ignore'] } : {})));
+    return (0, child_process_1.execSync)(`node ${require.resolve('@nrwl/tao')} new proj --nx-workspace-root=${localTmpDir} --no-interactive --skip-install --collection=@nrwl/workspace --npmScope=proj --packageManager=yarn --preset=empty ${args || ''}`, Object.assign({ cwd: localTmpDir }, (silent && false ? { stdio: ['ignore', 'ignore', 'ignore'] } : {})));
 }
 function patchPackageJsonForPlugin(npmPackageName, distPath) {
     const path = (0, paths_1.tmpProjPath)('package.json');
@@ -35,7 +35,7 @@ exports.uniq = uniq;
  */
 function runPackageManagerInstall(silent = true) {
     const pmc = (0, devkit_1.getPackageManagerCommand)();
-    const install = (0, child_process_1.execSync)(pmc.install, Object.assign({ cwd: (0, paths_1.tmpProjPath)() }, (silent ? { stdio: ['ignore', 'ignore', 'ignore'] } : {})));
+    const install = (0, child_process_1.execSync)(pmc.install, Object.assign({ cwd: (0, paths_1.tmpProjPath)() }, (silent && false ? { stdio: ['ignore', 'ignore', 'ignore'] } : {})));
     return install ? install.toString() : '';
 }
 exports.runPackageManagerInstall = runPackageManagerInstall;
